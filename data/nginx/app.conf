
server {
    # Sets this server block as the default (catch-all) block for all unmatched domains.
    listen 80 default_server;
	listen [::]:80 default_server;
    # Is an invalid domain name that never matches any real domain name.
    server_name _;
    # This is one of the key recommended practices in securing your Nginx HTTP and proxy server.
    # The “server_tokens” directive is responsible for displaying the Nginx version number and 
    # Operating system on error pages and in the “Server” HTTP response header field as shown in the following screenshot.
    server_tokens off;
    # redirects both www and non-www to https
    # For example, if the visitor opens http://example.com/page2 in the browser, 
    # Nginx will redirect the request to https://example.com/page2.
    return 301 https://$host$request_uri;
}

# Top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# ---------------
# DESCRIPTION
# This is an example only
# ---------------
server {
    listen 443 ssl;
    server_name <enter-your-domain-here>;
    server_tokens off;
    # SSL - certificate location
    ssl_certificate /etc/letsencrypt/live/<enter-your-domain-here>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<enter-your-domain-here>/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # Location
    location / {
        # This directive instruct NGINX proxy all requests matching the location pattern
        proxy_pass http://<enter-your-ip-here>:<enter-your-port-here>/;
        # Ensure the IP of the client sending requests to the NGINX is stored in the request header. 
        # This allows connections to be traced back to an origin. Without adding this header, 
        # all requests to the upstream WebSocket servers will have the NGINX server’s IP address as the source.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Host $host;
        proxy_set_header Host $host;
        # This directive converts the incoming connection to HTTP 1.1, which is required to support WebSockets.
        # The older HTTP 1.0 spec does not provide support for WebSockets, and any requests using HTTP 1.0 will fail.
        proxy_http_version 1.1;
        # Converts the proxied connection to type Upgrade. WebSockets only communicate on Upgraded connections.
        proxy_set_header Upgrade $http_upgrade;
        # Ensure the Connection header value is upgrade
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 600;
    }
    # Managing requests to verify letsencrypt host
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    # Handle error
    # Return html on defined error response
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html/;
        internal;
    }
}


# ---------------
# Add other servers here
# ---------------
# ....